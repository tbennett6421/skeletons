filter {

    if [source][ip] {
        
        ##---------------------
        ## Do city-db geoip
        ##---------------------
        geoip {
            id => "8001_enrich_ip.conf :: filter//geoip([source][ip])"
            source => "[source][ip]"
            target => "[source][geo]"
            tag_on_failure => ["_geoip_city_lookup_failure::8001_enrich_ip.conf :: filter//geoip([source][ip])"]
        }
        ## On success, modify for adherence to ECS
        if "_geoip_city_lookup_failure" not in [tags] {
            mutate {
                id => "8001_enrich_ip.conf :: filter//mutate([geoip][geo]) => ECS"
                copy => { "[source][geo][country_code2]" => "[source][geo][country_iso_code]" }
                remove_field => [ "[source][geo][ip]" ]
            }
            if [source][geo][country_iso_code] == "US" {
                translate {
                    id => "8001_enrich_ip.conf :: filter//translate([source][geo][region_code])"
                    field => "[source][geo][region_code]"
                    destination => "[source][geo][region_iso_code]"
                    dictionary_path => "/etc/logstash/resources/dictionaries/iso_region_us.yml"
                    fallback => "Translation Error"
                    override => true
                }
            }
        } ## End if not-in-tags
        
        ##---------------------
        ## Do as-db geoip
        ##---------------------
        geoip {
            id => "8001_enrich_ip.conf :: filter//geoip-asn([source][ip])"
            default_database_type => "ASN"
            source => "[source][ip]"
            target => "[source][as]"
            tag_on_failure => ["_geoip_asn_lookup_failure"]
            tag_on_failure => ["_geoip_asn_lookup_failure::8001_enrich_ip.conf :: filter//geoip-asn([source][ip])"]

            #database => "<path to DB>"
        }
        if "_geoip_asn_lookup_failure" not in [tags] {
            mutate {
                id => "8001_enrich_ip.conf :: filter//mutate([geoip][as]) => ECS"
                rename => {
                    
                    "[source][as][as_org]" => "[source][as][organization][name]"
                    "[source][as][asn]" => "[source][as][number]"
                }
                remove_field => [ "[source][as][ip]" ]
            }
        } ## End if not-in-tags
        
        mutate {
            id => "8001_enrich_ip.conf :: filter//mutate(anomali)"
            add_field => { "[enrichments][source][anomali]" => "https://ui.threatstream.com/detail/ip/%{[source][ip]}"}
        }

    } ## End if source-IP
} ## End Filter
